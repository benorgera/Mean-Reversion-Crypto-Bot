<html>
<head>
        <title id="title">CoinBull: {{debug.name}}</title>
</head>
<body>
    <div id="success" class="alert alert-success center-block"><strong>Recalculated Successfully</strong></div>
    <div id="cd">
        <canvas id="c"></canvas>
    </div>
    <div id="dd">
        <canvas id="d"></canvas>
    </div>
    <form action="javascript:void(0);" class="form-inline options no-top" onsubmit="return recalculate()">
      <div class="form-group">
        <label for="vol_high">Vol High:</label>
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="vol_high" required>
      </div>
      <div class="form-group">
        <label for="mean_days" class="space">Mean Days:</label>
        <input type="number" min="1" max="14" step="any" class="form-control input-sm" id="mean_days" required>
      </div>
      <div class="form-group">
        <label for="vol_days" class="space">Vol Days:</label>
        <input type="number" min="1" max="14" step="any" class="form-control input-sm" id="vol_days" required>
      </div>
      <button class="btn btn-primary space btn-sm">Recalc</button>
    </form>
    <form action="javascript:void(0);" class="form-inline options" onsubmit="return simulate()">
      <div class="form-group">
        <label class="space" for="buy_0">Buy 1:</label>
        <input type="number" min="0" max="1" step="any" class="form-control" id="buy_0" required>
        <input type="number" min="0" max="1" step="any" class="form-control" id="buy_0_" required>
        <label for="buy_1" class="space">Buy 2:</label>
        <input type="number" min="0" max="1" step="any" class="form-control" id="buy_1" required>
      </div>
      <div class="form-group">
        <label class="space" for="sell_0">Sell 1:</label>
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="sell_0" required>
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="sell_0_" required>
        <label class="space" for="sell_1">Sell 2:</label> 
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="sell_1" required>
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="sell_1_" required>
        <label class="space" for="sell_2">Sell 3:</label>
        <input type="number" min="0" max="1" step="any" class="form-control input-sm" id="sell_2" required>
      </div>
      <button class="btn btn-primary space btn-sm">Simulate</button>
    </form>
    </div>
</body>
<script src="http://localhost:4000/momentum.min.js"></script>
<script src="http://localhost:4000/chart_dist/Chart.js"></script>
<script type="text/javascript">

var c = document.getElementById('c'),
  d = document.getElementById('d'),
  ctx = c.getContext('2d'),
  dtx = d.getContext('2d'),
  SETTINGS = JSON.parse('{{{ SETTINGS }}}'),
  debug = JSON.parse('{{{ debug }}}'),
  market_index,
  time = {
    unit: 'day',
    unitStepSize: 1,
    display_formats: {
      millisecond: 'MMM DD',
      second: 'MMM DD',
      minute: 'MMM DD',
      hour: 'HH MMM DD',
      day: 'HH MMM DD',
      week: 'MMM DD',
      month: 'MMM DD',
      quarter: 'MMM DD',
      year: 'MMM DD'
    }
  },
  config_d = {
      type: 'line',
      data: {
          datasets: [{
              label: 'Volume Over Unit Interval',
              fill: false,
              yAxisID: 'unit_vol',
              backgroundColor: '#f1cbff',
              borderColor: '#f1cbff',
              data: debug.vols_over_unit_interval
          }, {
              label: 'Volume Average Over Entire Period',
              fill: false,
              yAxisID: 'unit_vol',
              backgroundColor: '#ffbdbd',
              borderColor: '#ffbdbd',
              data: debug.vol_avgs_over_period
          }, {
              label: 'Raw Volume Tick',
              fill: false,
              yAxisID: 'tick_vol',
              backgroundColor: '#e1f7d5',
              borderColor: '#e1f7d5',
              hidden: true,
              data: debug.vol_ticks
          }]
      },
      options: {
          elements: { point: { radius: 0, hitRadius: 3.5, hoverRadius: 3.5 } },
          animation: false,
          responsive: true,
          maintainAspectRatio: false,
          scales: {
              xAxes: [{
                  type: 'time',
                  time: time
              }],
              yAxes: [{
                  id: 'tick_vol',
                  type: 'linear',
                  position: 'right',
                  display: false
              },
              {
                  id: 'unit_vol',
                  type: 'linear',
                  position: 'left',
                  scaleLabel: {
                      display: true,
                      labelString: 'Volume BTC'
                  },
              }]
          }
      }
  },
  config_c = {
    type: 'line',
    data: {
        datasets: [{
            label: 'Price',
            fill: false,
            backgroundColor: '#bae1ff',
            borderColor: '#bae1ff',
            data: debug.price
        }, {
            label: 'Steady Mean',
            fill: false,
            backgroundColor: '#ffdfba',
            borderColor: '#ffdfba',
            data: debug.steady_mean
        }]
    },
    options: {
        elements: { point: { radius: 0, hitRadius: 3.5, hoverRadius: 3.5 } },
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        scales: {
            xAxes: [{
                type: 'time',
                time: time
            }],
            yAxes: [{
                scaleLabel: {
                    display: true,
                    labelString: 'Price BTC'
                }
            }]
        }
    }
  };

window.prices = new Chart(ctx, config_c);
window.volume = new Chart(dtx, config_d);

document.title = 'Coinbull: ' + debug.name;
market_index = debug.market_index;

document.getElementById('vol_high').value = SETTINGS.VOLUME_HIGH;
document.getElementById('sell_0').value = SETTINGS.FIRST_SELL.gain;
document.getElementById('sell_0_').value = SETTINGS.FIRST_SELL.sell;
document.getElementById('sell_1').value = SETTINGS.SECOND_SELL.gain;
document.getElementById('sell_1_').value = SETTINGS.SECOND_SELL.sell;
document.getElementById('sell_2').value = SETTINGS.THIRD_SELL;
document.getElementById('buy_0').value = SETTINGS.FIRST_BUY.drop;
document.getElementById('buy_0_').value = SETTINGS.FIRST_BUY.buy;
document.getElementById('buy_1').value = SETTINGS.SECOND_BUY; 
document.getElementById('mean_days').value = SETTINGS.MEAN_PERIOD / (60*60*24); 
document.getElementById('vol_days').value = SETTINGS.VOLUME_PERIOD / (60*60*24); 

function update_settings_object() {
    SETTINGS.MEAN_PERIOD = Number(document.getElementById('mean_days').value) * 60*60*24;
    SETTINGS.VOLUME_PERIOD = Number(document.getElementById('vol_days').value) * 60*60*24;
    SETTINGS.VOLUME_HIGH = Number(document.getElementById('vol_high').value);
    SETTINGS.FIRST_SELL.gain = Number(document.getElementById('sell_0').value);
    SETTINGS.FIRST_SELL.sell = Number(document.getElementById('sell_0_').value);
    SETTINGS.SECOND_SELL.gain = Number(document.getElementById('sell_1').value);
    SETTINGS.SECOND_SELL.sell = Number(document.getElementById('sell_1_').value);
    SETTINGS.THIRD_SELL = Number(document.getElementById('sell_2').value);
    SETTINGS.FIRST_BUY.drop = Number(document.getElementById('buy_0').value);
    SETTINGS.FIRST_BUY.buy = Number(document.getElementById('buy_0_').value);
    SETTINGS.SECOND_BUY = Number(document.getElementById('buy_1').value);
}

function simulate() {
    update_settings_object();

    post('/admin/simulate', JSON.stringify(SETTINGS), (res) => {
        console.log(res);
    });
}

function post(endpoint, data, callback) {
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'http://localhost:4000' + endpoint, true);
    xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
    xhr.onreadystatechange = () => {
        if (xhr.readyState == 4 && xhr.status == 200)
            callback(xhr.responseText);
    };
    xhr.send(data);
}

function recalculate() {
    update_settings_object();

    console.log(SETTINGS);

    post('/admin/recalc', JSON.stringify({ SETTINGS: SETTINGS, market_index: market_index }), (res) => {
        config_c.data.datasets[1].data = JSON.parse(res);
        window.prices.update();
        document.getElementById('success').style.display = 'block';
        setTimeout(() => {
            document.getElementById('success').style.display = 'none';
        }, 2000);
    });
}

</script>
<style type="text/css">
    body {
        width:  100%;
        height: 100%;
        margin: 0;
    }

    .no-top {
        margin-top: 0 !important;
    }

    .options {
        height: 4%;
        margin: 1em;
        margin-bottom: 0;
        text-align: center;
    }

    #dd {
        width: 100%;
        height: 30%;
    }

    #cd {
        width: 100%;
        height: 60%;
    }

    #success {
        text-align: center;
        width: 80%;
        margin-top: 0.5em;
        display: none;
        margin-bottom: 0.5em;
    }

    .space {
        margin-left: 1em;
    }

    input {
        width: 5em !important;
    }
</style>
<link rel="stylesheet" href="http://localhost:4000/bootstrap.min.css">
</html>